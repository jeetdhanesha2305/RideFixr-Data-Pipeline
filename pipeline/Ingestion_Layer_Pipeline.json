{
	"name": "Ingestion_Layer_Pipeline",
	"properties": {
		"activities": [
			{
				"name": "Copy Bikes Data",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "0.00:20:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "SELECT * FROM Bikes",
						"queryTimeout": "00:20:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "ParquetSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "ParquetWriteSettings"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "Bikes_Table_Dataset",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "Bikes_Ingestion_Dataset",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "Copy Services Data",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "SELECT * FROM Services",
						"queryTimeout": "00:20:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "ParquetSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "ParquetWriteSettings"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "Services_Table_Dataset",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "Services_Ingestion_Dataset",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "Copy Customers Data",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "0.00:20:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "SELECT * FROM Customers",
						"queryTimeout": "00:20:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "ParquetSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "ParquetWriteSettings"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "Customers_Table_Dataset",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "Customers_Ingestion_Dataset",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "Copy Service Centers Data",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "0.00:20:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "ParquetSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "ParquetWriteSettings"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "ServiceCenters_Table_Dataset",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "ServiceCenters_Ingestion_Dataset",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "Copy ServiceBookings Data",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "SELECT *\nFROM ServiceBookings\nWHERE ServiceScheduledTimestamp >= DATEADD(minute, -330,\n          CAST(DATEADD(day, -1, CONVERT(date, DATEADD(minute, 330, SYSUTCDATETIME()))) AS datetime2(0)))\n  AND ServiceScheduledTimestamp <  DATEADD(minute, -330,\n          CAST(CONVERT(date, DATEADD(minute, 330, SYSUTCDATETIME())) AS datetime2(0)));",
							"type": "Expression"
						},
						"queryTimeout": "00:20:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "ParquetSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "ParquetWriteSettings"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "ServiceBookings_Table_Dataset",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "ServiceBookings_Ingestion_Dataset",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "Copy BikeServiceStatus Data",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "0.00:20:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "SELECT *\nFROM dbo.BikeServiceStatus\nWHERE ServiceStartTime >= DATEADD(minute, -330,\n          CAST(DATEADD(day, -1, CONVERT(date, DATEADD(minute, 330, SYSUTCDATETIME()))) AS datetime2(0)))\n  AND ServiceStartTime <  DATEADD(minute, -330,\n          CAST(CONVERT(date, DATEADD(minute, 330, SYSUTCDATETIME())) AS datetime2(0)));",
						"queryTimeout": "00:20:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "ParquetSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "ParquetWriteSettings"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "BikeServiceStatus_Table_Dataset",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "BikeServiceStatus_Ingestion_Dataset",
						"type": "DatasetReference"
					}
				]
			}
		],
		"annotations": []
	}
}